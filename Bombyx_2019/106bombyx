#!/usr/bin/python3

import sys, math

def check(sys_av):
    i = 0
    while (i < len(sys_av)):
        if (sys_av[i] < '0' or sys_av[i] > '9'):
            if (sys_av[i] != '.'):
                exit(84)
        i += 1

def growth_rate():
    i0 = float(sys.argv[2])
    i1 = float(sys.argv[3])
    n = float(sys.argv[1])
    i = 0
    x = n
    k = 1.00

    while (k <= 4.0):
            while (i <= i0 - 1):
                x = n
                n = (k * x) * ((1000 - x) / 1000)
                i = i + 1
            while (i <= i1):
                print("%0.2f %0.2f" %(k, n))
                x = n
                n = (k * x) * ((1000 - x) / 1000)
                i = i + 1
            k = k + 0.01
            i = 0

def incre(n,k):
    return (k*n*((1000-n)/1000))

def calc(n,k):
    count = 1
    for loop in range (100):
        print(count,"%0.*f" %(2, n), sep=' ')
        n = incre(n,k)
        count += 1

if __name__ == "__main__":
    if (len(sys.argv) <= 2):
        exit (84)
    if (len(sys.argv) > 4):
        exit (84)
    i = 1
    while i < len(sys.argv):
        check(sys.argv[i])
        i += 1
    if sys.argv[1] == "-h":
        print("USAGE\n\t./106bombyx n [k | i0 i1]\n\nDESCRIPTION\n    n    number of first generation indivifuals\n    k    growth rate from 1 to 4\n    i0   initial generation (included)\n    i1   final generation (included)")
        exit (0)
    if (len(sys.argv) == 3):
        try:
            n = int(sys.argv[1])
            k = float(sys.argv[2])
            calc(n,k)
        except:
            exit (84)
    if (len(sys.argv) == 4):
        try:
            growth_rate()
        except:
            exit (84)
